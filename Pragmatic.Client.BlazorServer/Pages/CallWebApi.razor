@page "/callwebapi"
@attribute [Authorize]
@inject IDownstreamApi downstreamAPI
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler
@inject APIOptions apiOptions

<h1>Call an API</h1>

<p>This component demonstrates fetching data from a Web API.</p>

@if (apiResult == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>API Result</h2>
    @foreach(var item in apiResult)
    {
        <p>@(item.Name) [#@(item.Id)]</p>
    }

}

@code {
    private IEnumerable<ValueModel> apiResult = null;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            apiResult = await downstreamAPI.GetForUserAsync<IEnumerable<ValueModel>>(
                    "DownstreamApi",
                    options =>
                    {
                        options.BaseUrl = apiOptions.BaseAddress;
                        options.RelativePath = "values"; // NB! "api/" is included in the default BaseAddress
                    }
            );

        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
